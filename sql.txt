CREATE TABLE userlogin (
    Username VARCHAR2(50),
    Password VARCHAR2(32)
);



INSERT INTO userlogin (Username, Password)
VALUES ('umar', '482c811da5d5b4bc6d497ffa98491e38');

ALTER TABLE userlogin
ADD CONSTRAINT PK_your_table PRIMARY KEY (Username);




CREATE TABLE Products(
    ProductID INT,
    ProductName varchar2(50),
    Cost NUMBER(8,2),
    StockQuantity INT,
    SupplierID varchar(10),
    Category varchar2(50),
    ReorderLevel INT
);

CREATE UNIQUE INDEX UQ_ProductName ON Products(ProductName);

Create Table Supplier(
    SupplierID varchar(10) PRIMARY KEY,
    SupplierName varchar(50),
    Location varchar(50)
);

ALTER TABLE Supplier
ADD Password VARCHAR2(50);



ALTER TABLE Products
ADD CONSTRAINT PK_Products PRIMARY KEY (ProductID);

ALTER TABLE Products
ADD CONSTRAINT FK_Products_Supplier
FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID);


-- Passwords are their names
Insert INTO Supplier Values('S001','Sarim','Lahore','923a2e5990cac95a6675080cc88e5cb3');
Insert INTO Supplier Values('S002','Ali','Faisalabad','7a9b46ab6d983a85dd4d9a1aa64a3945');
Insert INTO Supplier Values('S003','Saad','Lahore','6eb062bec73a97c02fd4ad6bd0964046');




INSERT INTO Products (ProductID, ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (1, 'Drip Coffee Maker', 39.99, 90, 'S001', 'Kitchen Appliances', 15);

INSERT INTO Products (ProductID, ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (2, 'Bluetooth Speaker', 59.99, 120, 'S002', 'Electronics', 20);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (3,'High-Speed Blender', 79.99, 100, 'S001', 'Kitchen Appliances', 20);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (4,'Wireless Headphones', 129.99, 75, 'S002', 'Electronics', 15);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (5,'Stainless Steel Water Bottle', 19.99, 200, 'S003', 'Outdoor Gear', 30);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (6,'Memory Foam Pillow', 29.99, 50, 'S001', 'Home Goods', 10);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (7,'Smartphone Case', 14.99, 120, 'S002', 'Accessories', 25);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (8,'Portable Power Bank', 39.99, 90, 'S003', 'Gadgets', 20);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (9,'Resistance Bands Set', 24.99, 150, 'S001', 'Fitness', 35);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (10,'Ceramic Mug Set', 19.99, 40, 'S002', 'Kitchenware', 12);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (11,'Travel Backpack', 49.99, 80, 'S003', 'Luggage', 30);

INSERT INTO Products (ProductID,ProductName, Cost, StockQuantity, SupplierID, Category, ReorderLevel) 
VALUES (12,'Wireless Mouse', 29.99, 60, 'S001', 'Computer Accessories', 18);




CREATE TABLE SupplierProducts (
    SupplierID VARCHAR(10),
    ProductID INT,
    CONSTRAINT fk_SupplierID FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID),
    CONSTRAINT fk_ProductID FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    PRIMARY KEY (SupplierID)
);

Alter Table SupplierProducts 
Drop Primary Key

--select * from SupplierProducts

CREATE OR REPLACE TRIGGER CheckReorderLevel
AFTER UPDATE OF StockQuantity ON Products
FOR EACH ROW
DECLARE
    v_Count INTEGER;
BEGIN
    IF :NEW.StockQuantity < :NEW.ReorderLevel THEN
        -- Check if the SupplierProducts entry already exists
        SELECT COUNT(*)
        INTO v_Count
        FROM SupplierProducts
        WHERE SupplierID = :NEW.SupplierID AND ProductID = :NEW.ProductID;

        -- If the entry doesn't exist, insert it
        IF v_Count = 0 THEN
            INSERT INTO SupplierProducts (SupplierID, ProductID) VALUES (:NEW.SupplierID, :NEW.ProductID);
        END IF;
    END IF;
END;
/





